#!/bin/sh -efu

charset="koi8-r"
fig_lang="ru_RU.KOI8-R"

verbose="${verbose-}"
verbose(){
  [ -z "$verbose" ] || printf "%s" "$*" > /dev/stderr
}

##################################################

PROG="${0##*/}"

show_help()
{
	cat <<EOF

$PROG - update html, marks and thumbnail for an image

Usage: $PROG [options] file

Options:
    -h,         display help screen
    -v,         be more verbose
    -t <title>  set image title
    -p <url>    url for "previous" reference
    -u <url>    url for "up" reference
    -n <url>    url for "next" reference
    -m <style>  style of gif marks

Input files:
  name.{jpg,png,tiff,gif}  -- sourse image
  name.fig                 -- marks in fig format

Generated files:
  _name.{jpg,png,tiff,gif} -- thumbnail
  name_m.gif or name_m.png -- marks
  name.htm                 -- html

Mark styles:
  simple_gif
  aa_gif
  aa_gif_halo
  aa_gif_dark_halo

Report bugs to <slazav@altlinux.org>
EOF
exit
}

##################################################

opts="hvt:p:u:n:m:"

TEMP=`getopt -n "$PROG" -o $opts -- "$@"` || show_help
eval set -- "$TEMP"

title=""
purl=""
uurl=""
nurl=""
mstyle="aa_gif"

while :; do
  case "$1" in
    -v) verbose=1 ;;
    -h) show_help ;;
    -t) title="$2"; shift ;;
    -p) purl="$2"; shift ;;
    -u) uurl="$2"; shift ;;
    -n) nurl="$2"; shift ;;
    -m) mstyle="$2"; shift ;;
    --) shift; break ;;
  esac
  shift
done

[ "$#" = 1 ] || show_help

ifile="$1"
[ -r "$ifile" ] || { printf "$ifile: can't find file\n"; exit 1; }

base="${1%.*}"

##################################################

print_exif2html(){
  eval "$(ph_exif "$1")"
  [ -z "${date:-}" ] ||
    printf "\n  <br/>Дата и время съемки: $date"
  [ -z "${geo_alt:-}"  ] ||
    printf "\n  <br/>Высота: %d м" "${geo_alt%.*}"
  [ -z "${geo_lat:-}" -a -z "${geo_lon:-}" ] ||
    printf "\n  <br/>Координаты: %.7f %.7f" "$geo_lat" "$geo_lon"
}

filter_text(){
  printf "%s" "$1" |
  sed -e '
    s/<[^>]*>//g
    s/<\|>//g
    s/[[:space:]]\+$//
    s/^[[:space:]]\+//
  '
}

th_mark(){
  mogrify -fill red -draw 'circle 10,10,12,12' "$1"
  exiv2 -c "<marked>" "$1" 2>/dev/null
}
th_marked(){
  [ -r "$1" ] || return 1
  [ "$(exiv2 -pc "$1" 2>/dev/null)" = "<marked>" ]
}

make_mark(){
  local halo="$1"; shift
  local base="$1"; shift
  local ifile="$1"; shift
  local mfile="$1"; shift

  verbose "  creating marks";
  gif_file="$(mktemp).gif"
  local sc="-m2"
  [ "$mstyle" = "simple_gif" ] && sc="" ||:

  LANG="$fig_lang" fig2dev $sc -j -Lgif -D +0:200 -t'#FFFFFF' "$base.fig" "$gif_file"

  # IE can only show transparent gifs, not png. We can't use semi-transparent png here :(
  case "$mstyle" in
    simple_gif)
      mv -f -- "$gif_file" "$mfile"
    ;;
    aa_gif)
      convert\
        \( "$ifile"\
          \( "$gif_file" -alpha extract -blur 0x0.8 -threshold 15 -resize 50% \) \
          +matte -compose copy-opacity -composite -blur 0x2\
        \) \
        \( "$gif_file" -resize 50% \)\
        -compose over -composite\
        -quantize transparent \
        +dither -colors 255 -channel A -contrast-stretch 0\
        "$mfile"
    ;;
    aa_gif_halo)
      convert\
        \( "$ifile"\
          \( "$gif_file" -alpha extract -blur 0x1.2 -threshold 15 -resize 50% \) \
          +matte -compose copy-opacity -composite\
        \) \
        \( \
          "$gif_file"\
          \( -clone 0 +matte +level-colors white \
            \( -clone 0 -alpha extract -blur 4x3 -level 0%,50% \)\
            +matte -compose copy-opacity -composite \
          \) \
          -compose dst-over -composite\
          -resize 50%\
        \) \
        -compose over -composite\
        -quantize transparent \
        +dither -colors 255 -channel A -contrast-stretch 0\
        "$mfile"
    ;;
    aa_gif_dark_halo)
      convert\
        \( "$ifile"\
          \( "$gif_file" -alpha extract -blur 0x1.2 -threshold 15 -resize 50% \) \
          +matte -compose copy-opacity -composite\
        \) \
        \( \
          "$gif_file" +level 0,30%\
          \( -clone 0 +matte +level-colors white \
            \( -clone 0 -alpha extract -blur 4x3 -level 0%,50% \)\
            +matte -compose copy-opacity -composite \
          \) \
          -compose dst-over -composite\
          -resize 50%\
        \) \
        -compose over -composite\
        -quantize transparent \
        +dither -colors 255 -channel A -contrast-stretch 0\
        "$mfile"
    ;;
  esac
#  png_dark_halo
#  convert\
#        "$gif_file" +level 0,30%\
#        \( -clone 0 +matte +level-colors white \
#          \( -clone 0 -alpha extract -blur 4x3 -level 0%,50% \)\
#          +matte -compose copy-opacity -composite \
#        \) \
#        -compose dst-over -composite\
#        -resize 50%\
# "$mfile"

  rm -f -- "$gif_file"
}

verbose "$ifile";

## updating  marks
mfile=""
[ ! -r "$base.fig" ] || mfile="${base}_m.gif"
if [ -n "$mfile" -a "$mfile" -ot "$base.fig" ]; then
  make_mark "$mstyle" "$base" "$ifile" "$mfile"
fi

## removing old-style marks
if [ -f "$base.gif" -a "$base.gif" != "$ifile" ]; then
  echo "Removing old-style gif mark $base.gif" > /dev/stderr
  rm -f -- "$base.gif"
fi

## updating thumbnail
if [ "${ifile%/*}" != "$ifile" ]; then
  tfile="${ifile%/*}/_${ifile##*/}"
else
  tfile="_${ifile##*/}"
fi


# create thumbnail if image have change
if [ "$tfile" -ot "$ifile" ]; then
  verbose " creating thumbnail"
  ph_resize $ifile $tfile 200 100 600
fi

if th_marked "$tfile"; then
  # remove marked thumbnail if we have no marks
  if [ -z "$mfile" ]; then
    verbose " removing marked thumbnail"
    ph_resize $ifile $tfile 200 100 600
  fi
else
  if [ -n "$mfile" ]; then
    verbose "  updating mark on thumbnail"
    th_mark "$tfile"
  fi
fi

## creating html
verbose "  creating html";
alttitle="$(filter_text "$title")"

s="$(ph_size $ifile)"
w="${s%% *}"
h="${s##* }"

# make navigation panel
[ -z "$purl" ] || purl="<a href=\"$purl\">предыдущая</a>"
[ -z "$uurl" ] || uurl="<a href=\"$uurl\">к оглавлению</a>"
[ -z "$nurl" ] || nurl="<a href=\"$nurl\">следующая</a>"

nav=""
[ -z "$purl" -a -z "$uurl" -a -z "$nurl" ] ||
nav="
  <p><table width=\"100%\"><tr>
  <td align=left>$purl</td>
  <td align=center>$uurl</td>
  <td align=right>$nurl</td>
  </tr></table></p>"

# make javascript for switching marks
mark_scr=""
mark_sty=""
mark_nav=""
image="
    <img src=\"${ifile##*/}\" width=\"$w\" height=\"$h\" alt=\"$alttitle\">"

if [ -n "$mfile" ]; then
  mark_scr="
    <script language=\"JavaScript\">
    function update_vis(){
      document.getElementById(\"marks\").style.visibility=
        document.forms[0].elements[0].checked?'visible':'hidden'}
    function sw_marks(){
      document.forms[0].elements[0].checked=
        !document.forms[0].elements[0].checked}
    </script>"

  mark_sty="
    <style type=\"TEXT/CSS\">
      #image { position: absolute; left: 0px; top: 0px; width: ${w}px; height: ${h}px; }
      #marks { position: absolute; left: 0px; top: 0px; width: ${w}px; visibility: visible; }
    </style>"
  mark_nav="
    <form><input type=\"checkbox\" checked onclick=\"update_vis()\">
    Рисовать пометки (для переключения щелкните мышью по картинке)</form>"
  image="
    <p><div style=\"position: relative; height: ${h}px;\" onclick=\"sw_marks(); update_vis()\">
      <img id=\"image\" src=\"${ifile##*/}\" alt=\"$alttitle\">
      <img id=\"marks\" src=\"${mfile##*/}\">
      </div></p>"
fi

cat > $base.htm << EOF
<html>
  <head><title>$alttitle</title>
    <meta http-equiv="Content-Type" content="text/html; charset=$charset">$mark_scr$mark_sty
  </head>
  <body bgcolor="#FFFFFF">$nav$mark_nav
    <div align=left width=$w>
      <p><font size="+2">$title</font></p>$image
    </div>$(print_exif2html "$ifile")
  </body>
</html>
EOF
