#!/usr/bin/perl -w
use strict;

# Print some data about photo
# Here is only data than does not subject to changes when photo is editing
# So there is no orientation or current image size here

die "usage: $0 <file>\n" if $#ARGV<0;

# get exif-data as a hash
sub get_exif{
  my $file=shift;
  my %ret;
  foreach (`exiv2 -Pkv $file 2>/dev/null`){
    chomp;
    my ($k, $v) = split(/\s+/,$_,2);
    $ret{$k}=$v;
  }
  return %ret;
}

my %exif_to_var=(
  'Exif.GPSInfo.GPSLatitude'    => 'geo_lat',
  'Exif.GPSInfo.GPSLongitude'   => 'geo_lon',
  'Exif.GPSInfo.GPSAltitude'    => 'geo_alt',
#  'Exif.Image.DateTime'         => 'date',
  'Exif.Photo.DateTimeOriginal' => 'date',
  'Exif.Image.Model'            => 'model',
  'Exif.Photo.ExposureTime'     => 'exposure_time',
  'Exif.Photo.ExposureBiasValue'=> 'exposure_bias',
  'Exif.Photo.FocalLength'      => 'focal_length',
  'Exif.Photo.FNumber'          => 'fnumber',
#  'Exif.Photo.ShutterSpeedValue'=> 'shutter_speed',  # APEX units
#  'Exif.Photo.ApertureValue'    => 'aperture_value', # APEX units
  'Exif.Photo.Flash'            => 'flash',
  'Exif.Photo.PixelXDimension'  => 'original_width',
  'Exif.Photo.PixelYDimension'  => 'original_height',
);

my %flash_values=(
#http://www.awaresystems.be/imaging/tiff/tifftags/privateifd/exif/flash.html
 0x0000 => "Off",
 0x0001 => "On",
 0x0005 => "Return light not detected",
 0x0007 => "Return light detected",
 0x0009 => "On, compulsory mode",
 0x000D => "On, compulsory mode, return light not detected",
 0x000F => "On, compulsory mode, return light detected",
 0x0010 => "Off, compulsory mode",
 0x0018 => "Off, auto mode",
 0x0019 => "On, auto mode",
 0x001D => "On, auto mode, return light not detected",
 0x001F => "On, auto mode, return light detected",
 0x0020 => "No flash",
 0x0041 => "On, red-eye reduction",
 0x0045 => "On, red-eye reduction, return light not detected",
 0x0047 => "On, red-eye reduction, return light detected",
 0x0049 => "On, compulsory mode, red-eye reduction",
 0x004D => "On, compulsory mode, red-eye reduction, return light not detected",
 0x004F => "On, compulsory mode, red-eye reduction, return light detected",
 0x0059 => "On, auto mode, red-eye reduction mode",
 0x005D => "On, auto mode, return light not detected, red-eye reduction",
 0x005F => "On, auto mode, return light detected, red-eye reduction",
);

# convert some exif values to a more readable form
sub exif_cnv{
  my $dat=shift;
  my $n;

  # convert lat, lon, alt
  $n='Exif.GPSInfo.GPSLatitude';
  if ((exists $dat->{$n}) && ($dat->{$n}=~/^(\d+)\/(\d+)\s+(\d+)\/(\d+)\s+(\d+)\/(\d+)/)){
    $dat->{$n} = sprintf "%.7f", 1.0*$1/$2 + 1.0/60.0*$3/$4 + 1.0/3600.0*$5/$6;}
  if ((exists $dat->{$n.'Ref'}) && ($dat->{$n.'Ref'}=~/^S/)) {$dat->{$n}=-$dat->{$n};}

  $n='Exif.GPSInfo.GPSLongitude';
  if ((exists $dat->{$n}) && ($dat->{$n}=~/^(\d+)\/(\d+)\s+(\d+)\/(\d+)\s+(\d+)\/(\d+)/)){
    $dat->{$n} = sprintf "%.7f", 1.0*$1/$2 + 1.0/60.0*$3/$4 + 1.0/3600.0*$5/$6;}
  if ((exists $dat->{$n.'Ref'}) && ($dat->{$n.'Ref'}=~/^W/)) {$dat->{$n}=-$dat->{$n};}

  $n='Exif.GPSInfo.GPSAltitude';
  if ((exists $dat->{$n}) && ($dat->{$n}=~/^(\d+)\/(\d+)/)){
    $dat->{$n} = sprintf "%.1f", 1.0*$1/$2;}
  if ((exists $dat->{$n.'Ref'}) && ($dat->{$n.'Ref'}!=0)) {$dat->{$n}=-$dat->{$n};}

  # convert dated 2009:10:20 10:11:12 -> 2009/10/20 10:11:12
  foreach $n ('Exif.Image.DateTime',
              'Exif.Photo.DateTimeOriginal'){
    if ((exists $dat->{$n}) && ($dat->{$n} =~ /^(\d+):(\d+):(\d+)\s+(\d+):(\d+):(\d+)/)){
      $dat->{$n} = "$1/$2/$3 $4:$5:$6";
    }
  }
  # convert fractions to floating point values
  foreach $n ('Exif.Photo.FNumber',
              'Exif.Photo.FocalLength',
              'Exif.Photo.ShutterSpeedValue',
              'Exif.Photo.ApertureValue'){
    if ((exists $dat->{$n}) && ($dat->{$n} =~ /(\d+)\/(\d+)/)){
      $dat->{$n}= 1.0*$1/$2;
    }
  }

  $n='Exif.Photo.Flash';
  if (exists $dat->{$n}){
    foreach (keys %flash_values){
      if ($dat->{$n} == $_){
        $dat->{$n} = $flash_values{$_};
        last;
      }
    }
  }

}

my $f=$ARGV[0];
my %dat=get_exif($f);
exif_cnv(\%dat);

my %values;
# get values from exif
foreach my $e ( keys %exif_to_var ){
  my $v=$exif_to_var{$e};
  $values{$v} = $dat{$e} if exists($dat{$e});
}

# print values
foreach my $v ( sort keys %values ){
  print "$v=\"$values{$v}\"\n";
}


